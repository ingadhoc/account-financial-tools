<data>

    <record id="ir_action_server_action_find_duplicates" model="ir.actions.server">
        <field name="name">Find possible duplicates</field>
        <field name="model_id" ref="account.model_account_bank_statement"/>
        <field name="binding_model_id" ref="account.model_account_bank_statement"/>
        <field name="groups_id" eval="[(4, ref('base.group_no_one'))]"/>
        <field name="state">code</field>
        <field name="code">
st_line_obj = to_delete = env["account.bank.statement.line"]

# found duplicates
for st in records:
  domain = [('statement_id', '=', st.id)]
  res = st_line_obj
  tofix = st_line_obj.search(domain)
  dup_groups = 0
  while tofix:
    st_line = tofix[0]
    temp = st_line_obj.search([('ref', '=', st_line.ref), ('date', '=', st_line.date), ('name', '=', st_line.name), ('amount', '=', st_line.amount)])
    if len(temp) > 1:
      dup_groups += 1
      temp.write({'duplicated_group': 'Group %03d' % dup_groups})
      res += temp
      tofix = tofix - temp
    else:
      tofix = tofix - st_line

if res:
    action = {
        'name': 'Possible duplicates',
        'view_mode': 'tree,form',
        'res_model': 'account.bank.statement.line',
        'type': 'ir.actions.act_window',
        'target': 'current',
        'domain': [('id', 'in', res.ids)],
        'context': {'search_default_group_by_duplicated_group': True},
     }
else:
    raise Warning('We do not found any duplicate')
        </field>
    </record>

</data>
